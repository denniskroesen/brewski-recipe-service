package nl.dkroesen.brewskibackend.sampledb.public_.recipe_steps.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.typemapper.TypeMapper;
import java.util.OptionalInt;
import java.util.OptionalLong;
import nl.dkroesen.brewskibackend.sampledb.public_.recipe_steps.RecipeSteps;

/**
 * The generated base for the {@link
 * nl.dkroesen.brewskibackend.sampledb.public_.recipe_steps.RecipeSteps}-interface
 * representing entities of the {@code recipe_steps}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedRecipeSteps {
    
    /**
     * This Field corresponds to the {@link RecipeSteps} field that can be
     * obtained using the {@link RecipeSteps#getRecipeStepId()} method.
     */
    LongField<RecipeSteps, Long> RECIPE_STEP_ID = LongField.create(
        Identifier.RECIPE_STEP_ID,
        RecipeSteps::getRecipeStepId,
        RecipeSteps::setRecipeStepId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link RecipeSteps} field that can be
     * obtained using the {@link RecipeSteps#getRecipeId()} method.
     */
    ComparableField<RecipeSteps, Long, Long> RECIPE_ID = ComparableField.create(
        Identifier.RECIPE_ID,
        o -> OptionalUtil.unwrap(o.getRecipeId()),
        RecipeSteps::setRecipeId,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link RecipeSteps} field that can be
     * obtained using the {@link RecipeSteps#getDuration()} method.
     */
    ComparableField<RecipeSteps, Integer, Integer> DURATION = ComparableField.create(
        Identifier.DURATION,
        o -> OptionalUtil.unwrap(o.getDuration()),
        RecipeSteps::setDuration,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link RecipeSteps} field that can be
     * obtained using the {@link RecipeSteps#getTargetTemperature()} method.
     */
    ComparableField<RecipeSteps, Integer, Integer> TARGET_TEMPERATURE = ComparableField.create(
        Identifier.TARGET_TEMPERATURE,
        o -> OptionalUtil.unwrap(o.getTargetTemperature()),
        RecipeSteps::setTargetTemperature,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the recipeStepId of this RecipeSteps. The recipeStepId field
     * corresponds to the database column
     * sampledb.public.recipe_steps.recipe_step_id.
     * 
     * @return the recipeStepId of this RecipeSteps
     */
    long getRecipeStepId();
    
    /**
     * Returns the recipeId of this RecipeSteps. The recipeId field corresponds
     * to the database column sampledb.public.recipe_steps.recipe_id.
     * 
     * @return the recipeId of this RecipeSteps
     */
    OptionalLong getRecipeId();
    
    /**
     * Returns the duration of this RecipeSteps. The duration field corresponds
     * to the database column sampledb.public.recipe_steps.duration.
     * 
     * @return the duration of this RecipeSteps
     */
    OptionalInt getDuration();
    
    /**
     * Returns the targetTemperature of this RecipeSteps. The targetTemperature
     * field corresponds to the database column
     * sampledb.public.recipe_steps.target_temperature.
     * 
     * @return the targetTemperature of this RecipeSteps
     */
    OptionalInt getTargetTemperature();
    
    /**
     * Sets the recipeStepId of this RecipeSteps. The recipeStepId field
     * corresponds to the database column
     * sampledb.public.recipe_steps.recipe_step_id.
     * 
     * @param recipeStepId to set of this RecipeSteps
     * @return             this RecipeSteps instance
     */
    RecipeSteps setRecipeStepId(long recipeStepId);
    
    /**
     * Sets the recipeId of this RecipeSteps. The recipeId field corresponds to
     * the database column sampledb.public.recipe_steps.recipe_id.
     * 
     * @param recipeId to set of this RecipeSteps
     * @return         this RecipeSteps instance
     */
    RecipeSteps setRecipeId(Long recipeId);
    
    /**
     * Sets the duration of this RecipeSteps. The duration field corresponds to
     * the database column sampledb.public.recipe_steps.duration.
     * 
     * @param duration to set of this RecipeSteps
     * @return         this RecipeSteps instance
     */
    RecipeSteps setDuration(Integer duration);
    
    /**
     * Sets the targetTemperature of this RecipeSteps. The targetTemperature
     * field corresponds to the database column
     * sampledb.public.recipe_steps.target_temperature.
     * 
     * @param targetTemperature to set of this RecipeSteps
     * @return                  this RecipeSteps instance
     */
    RecipeSteps setTargetTemperature(Integer targetTemperature);
    
    enum Identifier implements ColumnIdentifier<RecipeSteps> {
        
        RECIPE_STEP_ID     ("recipe_step_id"),
        RECIPE_ID          ("recipe_id"),
        DURATION           ("duration"),
        TARGET_TEMPERATURE ("target_temperature");
        
        private final String columnName;
        private final TableIdentifier<RecipeSteps> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "sampledb";
        }
        
        @Override
        public String getSchemaName() {
            return "public";
        }
        
        @Override
        public String getTableName() {
            return "recipe_steps";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<RecipeSteps> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}